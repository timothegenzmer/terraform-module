name: Integration Tests
on: push
jobs:
  tests:
    name: Run Terratest Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.25
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check -recursive
      - name: Init terraform
        id: init
        working-directory: tests/basic
        run: terraform init
      - name: Terraform Validate
        id: validate
        working-directory: tests/basic
        run: terraform validate -no-color
      - name: Terraform Apply
        id: apply
        working-directory: tests/basic
        run: terraform apply -no-color
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Destroy
        if: ${{ always() }}
        id: destroy
        working-directory: tests/basic
        run: terraform destroy -auto-approve -no-color
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
